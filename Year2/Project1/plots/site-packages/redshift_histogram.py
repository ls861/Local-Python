
def redshift_histogram(ADx_subset, figuresize, fontsize_legend, fontsize_axes, save):

    import matplotlib as mpl
    import matplotlib.pyplot as plt

    # =============================================================================
    # redshift histogram
    # =============================================================================

    fig = plt.figure(figsize=(0.6*figuresize, 0.6*figuresize))
    ax1 = fig.add_axes([0, 0, 1, 1]) #[left, bottom, width, height]

    #ax1.contourf((ADx1[1][1:]+ADx1[1][:-1])/2., \
    #                (ADx1[2][1:]+ADx1[2][:-1])/2., np.log10(np.transpose(ADx1[0])), \
    #                 cmap=cm.gist_yarg)
    #ax1.scatter(ADx['redshift_AD'][idx_IRAC], ADx['redshift_BEAGLE'][idx_IRAC], s=3, alpha=1.0, color='blue', label='No reliable IRAC data')
    #ax1.scatter(ADx_subset['redshift_AD'], ADx_subset['redshift_BEAGLE'], s=3, alpha=1.0, color='red', label='Selected Subset')

    ax1.hist(((ADx_subset['redshift_BEAGLE']-ADx_subset['redshift_AD'])/(1.0+ADx_subset['redshift_AD'])), alpha=0.3, bins=40,log=True, label='median z')
    #ax1.hist(((ADx_subset['redshift_BEAGLE_mean']-ADx_subset['redshift_AD'])/(1.0+ADx_subset['redshift_AD'])), alpha=0.3, bins=40, log=True, label='mean z')

    #ax1.hist(ADx_subset['redshift_AD'], alpha=0.3, bins=30)
    #ax1.hist(ADx_subset['redshift_BEAGLE'], alpha=0.3, bins=30)

    #ax1.set_xlim(0.0, 10.0)
    ax1.set_xlabel(r'$(z_\mathrm{BEAGLE}-z_\mathrm{ASTRODEEP})/(1+z_\mathrm{ASTRODEEP})$', labelpad=10)
    ax1.xaxis.set_major_locator(mpl.ticker.MultipleLocator(1))
    ax1.xaxis.set_minor_locator(mpl.ticker.MultipleLocator(0.5))
    ax1.xaxis.set_tick_params(which='major', size=10, width=2, direction='in', bottom='on', top='on')
    ax1.xaxis.set_tick_params(which='minor', size=5, width=2, direction='in', bottom='on', top='on')
    ax1.xaxis.set_tick_params(labelsize=fontsize_axes)

    #ax1.set_ylim(0.0, 10.0)
    ax1.set_ylabel(r'Count', labelpad=10)
    #ax1.yaxis.set_major_locator(mpl.ticker.MultipleLocator(1))
    #ax1.yaxis.set_minor_locator(mpl.ticker.MultipleLocator(0.5))
    ax1.yaxis.set_tick_params(which='major', size=10, width=2, direction='in', left='on', right='on')
    ax1.yaxis.set_tick_params(which='minor', size=5, width=2, direction='in', left='on', right='on')
    ax1.yaxis.set_tick_params(labelsize=fontsize_axes)


    ax1.legend(bbox_to_anchor=(0.95, 0.95), loc=1, frameon=True, fontsize=fontsize_legend)

    if save:
        plt.savefig('redshift_histogram.png', dpi=300, transparent=False, bbox_inches='tight')
    plt.show()
