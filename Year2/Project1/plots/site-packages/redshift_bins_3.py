
# =============================================================================
# Parameter vs redshift, in redshift bins, slope, intercept and scatter
# =============================================================================

def redshift_bins_3(rc_29_20_c1, rc_29_20_c2, rc_31_20_c3, rc_31_20_c4, rc_33_26_c5, figuresize, fontsize_legend, fontsize_axes, string_slope, string_normalisation, string_scatter, string_pbad, string_outlier_mean, string_outlier_sigma, string_redshift, save):

    import matplotlib.pyplot as plt
    import matplotlib as mpl

    fig = plt.figure(figsize=(2*figuresize, 1*figuresize))
    xlow = 0.3
    xhigh = 6.7

    param = ['pbad', 'outlier_mean', 'outlier_sigma']

    ax1 = fig.add_axes([0, 2.5, 0.5, 0.5]) #[left, bottom, width, height]
    ax2 = fig.add_axes([0, 2.0, 0.5, 0.5]) #[left, bottom, width, height]
    ax3 = fig.add_axes([0, 1.5, 0.5, 0.5]) #[left, bottom, width, height]

    axes = [ax1,ax2,ax3]

    for ax in axes:
        ax.set_xlim(xlow, xhigh)
        ax.xaxis.set_major_locator(mpl.ticker.MultipleLocator(1))
        ax.xaxis.set_minor_locator(mpl.ticker.MultipleLocator(0.5))
        ax.xaxis.set_tick_params(which='major', size=10, width=2, direction='in', bottom='on', top='on')
        ax.xaxis.set_tick_params(which='minor', size=0, width=0, direction='in', bottom='on', top='on')
        ax.yaxis.set_tick_params(which='major', size=10, width=2, direction='in', left='on', right='on')
        ax.yaxis.set_tick_params(which='minor', size=5, width=2, direction='in', left='on', right='on')
        ax.yaxis.set_tick_params(labelsize=fontsize_axes)

    # redshift bins
    # for rc in [rc_29_19_c1, rc_31_19_c2, rc_31_19_c3, rc_31_19_c4]:
    #     for a, ax in enumerate(axes):
    #         ax.plot(rc['z'], rc['{}_50_arr'.format(param[a])], color='black', linestyle='dashed')
            # ax.fill_between(rc['z'], rc['{}_16_arr'.format(param[a])], rc['{}_84_arr'.format(param[a])], alpha=0.3, color='blue', zorder=0)

    for rc in [rc_29_20_c1, rc_29_20_c2, rc_31_20_c3]:
        for a, ax in enumerate(axes):
            ax.plot(rc.item().get('z'), rc.item().get('{}_50_arr'.format(param[a])), color='black', linewidth=4)
            ax.fill_between(rc.item().get('z'), rc.item().get('{}_16_arr'.format(param[a])), rc.item().get('{}_84_arr'.format(param[a])), alpha=0.1, color='blue', zorder=0, edgecolor='w')

    for rc in [rc_31_20_c4, rc_33_26_c5]:
        ax1.plot(rc.item().get('z'), rc.item().get('{}_50_arr'.format('pbad')), color='black', linewidth=4)
        ax1.fill_between(rc.item().get('z'), rc.item().get('{}_16_arr'.format('pbad')), rc.item().get('{}_84_arr'.format('pbad')), alpha=0.1, color='blue', zorder=0, edgecolor='w')


    # for rc in [rc_31_21_c1, rc_31_21_c2, rc_31_21_c3, rc_31_21_c4]:
    #     for a, ax in enumerate(axes):
    #         ax.plot(rc['z'], rc['{}_50_arr'.format(param[a])], color='black', linestyle='dotted')
            # ax.fill_between(rc['z'], rc['{}_16_arr'.format(param[a])], rc['{}_84_arr'.format(param[a])], alpha=0.3, color='tab:blue', zorder=0)

    # layout
    ylim_low = [0.001, 0.6, 0.95]
    ylim_high = [0.299, 1.9, 1.25]
    string = [string_pbad, string_outlier_mean, string_outlier_sigma]
    ticker_maj = [0.1, 0.5, 0.1]
    ticker_min = [0.05, 0.25, 0.05]
    for a, ax in enumerate(axes):
        ax.set_ylim(ylim_low[a], ylim_high [a])
        ax.set_ylabel(string[a], labelpad=10)
        ax.yaxis.set_major_locator(mpl.ticker.MultipleLocator(ticker_maj[a]))
        ax.yaxis.set_minor_locator(mpl.ticker.MultipleLocator(ticker_min[a]))

    ax3.set_xlabel(string_redshift, labelpad=10)
    ax3.xaxis.set_tick_params(labelsize=fontsize_axes)

    # ax3.plot(0, 0, color='black', linestyle='dashed', label='run 19')
    # ax3.plot(0, 0, color='black', label='run 20')
    # ax3.plot(0, 0, color='black', linestyle='dotted', label='run 21')
    # ax3.legend(loc='lower right', frameon=False, fontsize=fontsize_legend)

    if save:
        plt.savefig('redshift_bins_3.png', dpi=300, transparent=False, bbox_inches='tight')
    plt.show()
